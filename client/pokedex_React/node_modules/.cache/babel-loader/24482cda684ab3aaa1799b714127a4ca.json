{"ast":null,"code":"var _jsxFileName = \"/home/bionexo/projetoaprendizes/client/pokedex_React/src/component/layout/pokemon/Pokemon.js\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nexport default class Pokemon extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      pokemonIndex: '',\n      imageUrl: '',\n      types: [],\n      description: '',\n      statTitleWidth: 3,\n      statBarWidth: 9,\n      stats: {\n        hp: '',\n        attack: '',\n        defense: '',\n        speed: '',\n        specialAttack: '',\n        specialDefense: ''\n      },\n      height: '',\n      weight: '',\n      eggGroups: '',\n      catchRate: '',\n      abilities: '',\n      genderRatioMale: '',\n      genderRatioFemale: '',\n      evs: '',\n      hatchSteps: '',\n      themeColor: '#EF5350'\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      pokemonIndex\n    } = this.props.match.params; // Urls for pokemon information\n\n    const pokemonUrl = `https://pokeapi.co/api/v2/pokemon/${pokemonIndex}/`;\n    const pokemonSpeciesUrl = `https://pokeapi.co/api/v2/pokemon-species/${pokemonIndex}/`; // Get Pokemon Information\n\n    const pokemonRes = await Axios.get(pokemonUrl);\n    const name = pokemonRes.data.name;\n    const imageUrl = pokemonRes.data.sprites.front_default;\n    let {\n      hp,\n      attack,\n      defense,\n      speed,\n      specialAttack,\n      specialDefense\n    } = '';\n    pokemonRes.data.stats.map(stat => {\n      switch (stat.stat.name) {\n        case 'hp':\n          hp = stat['base_stat'];\n          break;\n\n        case 'attack':\n          attack = stat['base_stat'];\n          break;\n\n        case 'defense':\n          defense = stat['base_stat'];\n          break;\n\n        case 'speed':\n          speed = stat['base_stat'];\n          break;\n\n        case 'special-attack':\n          specialAttack = stat['base_stat'];\n          break;\n\n        case 'special-defense':\n          specialDefense = stat['base_stat'];\n          break;\n\n        default:\n          break;\n      }\n    }); // Convert Decimeters to Feet... The + 0.0001 * 100 ) / 100 is for rounding to two decimal places :)\n\n    const height = Math.round((pokemonRes.data.height * 0.328084 + 0.00001) * 100) / 100;\n    const weight = Math.round((pokemonRes.data.weight * 0.220462 + 0.00001) * 100) / 100;\n    const types = pokemonRes.data.types.map(type => type.type.name); //const themeColor = `${TYPE_COLORS[types[types.length - 1]]}`;\n\n    const abilities = pokemonRes.data.abilities.map(ability => {\n      return ability.ability.name.toLowerCase().split('-').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ');\n    }).join(', ');\n    const evs = pokemonRes.data.stats.filter(stat => {\n      if (stat.effort > 0) {\n        return true;\n      }\n\n      return false;\n    }).map(stat => {\n      return `${stat.effort} ${stat.stat.name.toLowerCase().split('-').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ')}`;\n    }).join(', '); // Get Pokemon Description .... Is from a different end point uggh\n\n    await Axios.get(pokemonSpeciesUrl).then(res => {\n      let description = '';\n      res.data.flavor_text_entries.some(flavor => {\n        if (flavor.language.name === 'en') {\n          description = flavor.flavor_text;\n          return;\n        }\n      });\n      const femaleRate = res.data['gender_rate'];\n      const genderRatioFemale = 12.5 * femaleRate;\n      const genderRatioMale = 12.5 * (8 - femaleRate);\n      const catchRate = Math.round(100 / 255 * res.data['capture_rate']);\n      const eggGroups = res.data['egg_groups'].map(group => {\n        return group.name.toLowerCase().split(' ').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ');\n      }).join(', ');\n      const hatchSteps = 255 * (res.data['hatch_counter'] + 1);\n      this.setState({\n        description,\n        genderRatioFemale,\n        genderRatioMale,\n        catchRate,\n        eggGroups,\n        hatchSteps\n      });\n    });\n    this.setState({\n      imageUrl,\n      pokemonIndex,\n      name,\n      types,\n      stats: {\n        hp,\n        attack,\n        defense,\n        speed,\n        specialAttack,\n        specialDefense\n      },\n      themeColor,\n      height,\n      weight,\n      abilities,\n      evs\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 12\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/bionexo/projetoaprendizes/client/pokedex_React/src/component/layout/pokemon/Pokemon.js"],"names":["React","Component","Axios","Pokemon","state","name","pokemonIndex","imageUrl","types","description","statTitleWidth","statBarWidth","stats","hp","attack","defense","speed","specialAttack","specialDefense","height","weight","eggGroups","catchRate","abilities","genderRatioMale","genderRatioFemale","evs","hatchSteps","themeColor","componentDidMount","props","match","params","pokemonUrl","pokemonSpeciesUrl","pokemonRes","get","data","sprites","front_default","map","stat","Math","round","type","ability","toLowerCase","split","s","charAt","toUpperCase","substring","join","filter","effort","then","res","flavor_text_entries","some","flavor","language","flavor_text","femaleRate","group","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Axios from 'axios';\n\nexport default class Pokemon extends Component {\n    state = {\n        name: '',\n        pokemonIndex: '',\n        imageUrl: '',\n        types: [],\n        description: '',\n        statTitleWidth: 3,\n        statBarWidth: 9,\n        stats: {\n          hp: '',\n          attack: '',\n          defense: '',\n          speed: '',\n          specialAttack: '',\n          specialDefense: ''\n        },\n        height: '',\n        weight: '',\n        eggGroups: '',\n        catchRate: '',\n        abilities: '',\n        genderRatioMale: '',\n        genderRatioFemale: '',\n        evs: '',\n        hatchSteps: '',\n        themeColor: '#EF5350'\n      };\n    \n      async componentDidMount() {\n        const { pokemonIndex } = this.props.match.params;\n    \n        // Urls for pokemon information\n        const pokemonUrl = `https://pokeapi.co/api/v2/pokemon/${pokemonIndex}/`;\n        const pokemonSpeciesUrl = `https://pokeapi.co/api/v2/pokemon-species/${pokemonIndex}/`;\n    \n        // Get Pokemon Information\n        const pokemonRes = await Axios.get(pokemonUrl);\n    \n        const name = pokemonRes.data.name;\n        const imageUrl = pokemonRes.data.sprites.front_default;\n    \n        let { hp, attack, defense, speed, specialAttack, specialDefense } = '';\n    \n        pokemonRes.data.stats.map(stat => {\n          switch (stat.stat.name) {\n            case 'hp':\n              hp = stat['base_stat'];\n              break;\n            case 'attack':\n              attack = stat['base_stat'];\n              break;\n            case 'defense':\n              defense = stat['base_stat'];\n              break;\n            case 'speed':\n              speed = stat['base_stat'];\n              break;\n            case 'special-attack':\n              specialAttack = stat['base_stat'];\n              break;\n            case 'special-defense':\n              specialDefense = stat['base_stat'];\n              break;\n            default:\n              break;\n          }\n        });\n    \n        // Convert Decimeters to Feet... The + 0.0001 * 100 ) / 100 is for rounding to two decimal places :)\n        const height =\n          Math.round((pokemonRes.data.height * 0.328084 + 0.00001) * 100) / 100;\n    \n        const weight =\n          Math.round((pokemonRes.data.weight * 0.220462 + 0.00001) * 100) / 100;\n    \n        const types = pokemonRes.data.types.map(type => type.type.name);\n    \n        //const themeColor = `${TYPE_COLORS[types[types.length - 1]]}`;\n    \n        const abilities = pokemonRes.data.abilities\n          .map(ability => {\n            return ability.ability.name\n              .toLowerCase()\n              .split('-')\n              .map(s => s.charAt(0).toUpperCase() + s.substring(1))\n              .join(' ');\n          })\n          .join(', ');\n    \n        const evs = pokemonRes.data.stats\n          .filter(stat => {\n            if (stat.effort > 0) {\n              return true;\n            }\n            return false;\n          })\n          .map(stat => {\n            return `${stat.effort} ${stat.stat.name\n              .toLowerCase()\n              .split('-')\n              .map(s => s.charAt(0).toUpperCase() + s.substring(1))\n              .join(' ')}`;\n          })\n          .join(', ');\n    \n        // Get Pokemon Description .... Is from a different end point uggh\n        await Axios.get(pokemonSpeciesUrl).then(res => {\n          let description = '';\n          res.data.flavor_text_entries.some(flavor => {\n            if (flavor.language.name === 'en') {\n              description = flavor.flavor_text;\n              return;\n            }\n          });\n          const femaleRate = res.data['gender_rate'];\n          const genderRatioFemale = 12.5 * femaleRate;\n          const genderRatioMale = 12.5 * (8 - femaleRate);\n    \n          const catchRate = Math.round((100 / 255) * res.data['capture_rate']);\n    \n          const eggGroups = res.data['egg_groups']\n            .map(group => {\n              return group.name\n                .toLowerCase()\n                .split(' ')\n                .map(s => s.charAt(0).toUpperCase() + s.substring(1))\n                .join(' ');\n            })\n            .join(', ');\n    \n          const hatchSteps = 255 * (res.data['hatch_counter'] + 1);\n    \n          this.setState({\n            description,\n            genderRatioFemale,\n            genderRatioMale,\n            catchRate,\n            eggGroups,\n            hatchSteps\n          });\n        });\n    \n        this.setState({\n          imageUrl,\n          pokemonIndex,\n          name,\n          types,\n          stats: {\n            hp,\n            attack,\n            defense,\n            speed,\n            specialAttack,\n            specialDefense\n          },\n          themeColor,\n          height,\n          weight,\n          abilities,\n          evs\n        });\n      }\nrender(){\n    return <div className=\"col\"></div>\n  }\n}"]},"metadata":{},"sourceType":"module"}