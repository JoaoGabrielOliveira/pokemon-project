{"ast":null,"code":"var _jsxFileName = \"/home/bionexo/projetoaprendizes/client/pokedex_React/src/component/layout/pokemon/Pokemon.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst TYPE_COLORS = {\n  bug: 'B1C12E',\n  dark: '4F3A2D',\n  dragon: '755EDF',\n  electric: 'FCBC17',\n  fairy: 'F4B1F4',\n  fighting: '823551D',\n  fire: 'E73B0C',\n  flying: 'A3B3F7',\n  ghost: '6060B2',\n  grass: '74C236',\n  ground: 'D3B357',\n  ice: 'A3E7FD',\n  normal: 'C8C4BC',\n  poison: '934594',\n  psychic: 'ED4882',\n  rock: 'B9A156',\n  steel: 'B5B5C3',\n  water: '3295F6'\n};\nexport default class Pokemon extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      pokemonIndex: '',\n      imageUrl: '',\n      type: [],\n      decriptio: 'pt-br',\n      stats: {\n        hp: \"\",\n        attack: \"\",\n        defense: \"\",\n        speed: \"\",\n        specialAttack: \"\",\n        specialDefense: \"\"\n      },\n      height: \"\",\n      weight: \"\",\n      eggGroup: \"\",\n      abilities: \"\",\n      genderRatioMale: \"\",\n      genderRatioFemale: \"\",\n      evs: \"\",\n      hastchSteps: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      pokemonIndex\n    } = this.props.match.params; // Urls do pokemon\n\n    const pokemonUrl = `https://pokeapi.co/api/v2/pokemon/${pokemonIndex}/`;\n    const pokemonSpeciesUrl = `https://pokeapi.co/api/v2/pokemon-species/${pokemonIndex}/`; // pegue as informações do pokemon\n\n    const pokemonRes = await axios.get(pokemonUrl);\n    const name = pokemonRes.data.name;\n    const imageUrl = pokemonRes.data.sprites.front_default;\n    let {\n      hp,\n      attack,\n      defense,\n      speed,\n      specialAttack,\n      specialDefense\n    } = '';\n    pokemonRes.data.stats.map(stat => {\n      switch (stat.stat.name) {\n        case 'hp':\n          hp = stat['base_stat'];\n          break;\n\n        case 'attack':\n          attack = stat['base_stat'];\n          break;\n\n        case 'defense':\n          defense = stat['base_stat'];\n          break;\n\n        case 'speed':\n          speed = stat['base_stat'];\n          break;\n\n        case 'special-attack':\n          specialAttack = stat['base_stat'];\n          break;\n\n        case 'special-defense':\n          specialDefense = stat['base_stat'];\n          break;\n\n        default:\n          break;\n      }\n    }); //conversor de decimetros \n\n    const height = Math.round((pokemonRes.data.height * 0.328084 + 0.0001) * 100) / 100; // conversor to lbs\n\n    const weight = Math.round((pokemonRes.data.weight * 0.220462 + 0.0001) * 100) / 100;\n    const type = pokemonRes.data.types.map(type => type.type.name);\n    const abilities = pokemonRes.data.abilities.map(ability => {\n      return ability.ability.name.toLowerCase().split('-').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join('');\n    });\n    const evs = pokemonRes.data.stats.filter(stat => {\n      if (stat.effort > 0) {\n        return true;\n      }\n\n      return false;\n    }).map(stat => {\n      return `${stat.effor} ${stat.stat.name}`.toLowerCase().split('-').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join('');\n    }).join(','); //pegar descrições do pokemon\n\n    await axios.get(pokemonSpeciesUrl).then(res => {\n      let description = '';\n      res.data.flavor_text_entries.some(flavor => {\n        if (flavor.language.name === 'pt-br') {\n          description = flavor.flavor_text;\n          return;\n        }\n      });\n      const femaleRate = res.data['gender_rate'];\n      const genderRatioFemale = 12.5 * femaleRate;\n      const genderRatioMale = 12.5 * (8 - femaleRate);\n      const catchRate = Math.round(100 / 255 * res.data['capture_rate']);\n      const eggGroups = res.data['egg_groups'].map(group => {\n        return group.name.toLowerCase().split('-').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ');\n      }).join(',');\n      const hastchSteps = 255 * (res.data[\"hatch_counter\"] + 1);\n      this.setState({\n        description,\n        genderRatioFemale,\n        genderRatioMale,\n        catchRate,\n        eggGroups,\n        hastchSteps\n      });\n    });\n    this.setState({\n      imageUrl,\n      pokemonIndex,\n      name,\n      type,\n      state: {\n        hp,\n        attack,\n        defense,\n        speed,\n        specialAttack,\n        specialDefense\n      },\n      height,\n      weight,\n      abilities,\n      evs\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clo-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }\n    }, this.state.pokemonIndex)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 29\n      }\n    }, this.state.type.map(type => /*#__PURE__*/React.createElement(\"span\", {\n      key: type,\n      className: \"badge badge-primary badge-pill mr-1 leftS\",\n      style: {\n        backgroundColor: `#${TYPE_COLORS[type]}`,\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 37\n      }\n    }, type.toLowerCase().split('-').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' '))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.imageUrl,\n      className: \"card-img-top rounded mx-auto mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 38\n      }\n    }, this.state.name.toLowerCase().split('-').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row aling-intems-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 45\n      }\n    }, \"HP\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar\",\n      role: \"progressBar\",\n      style: {\n        width: `${this.state.stats.hp}%`\n      },\n      \"aria-valuenow\": \"25\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 53\n      }\n    })))))))));\n  }\n\n}","map":{"version":3,"sources":["/home/bionexo/projetoaprendizes/client/pokedex_React/src/component/layout/pokemon/Pokemon.js"],"names":["React","Component","axios","TYPE_COLORS","bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","Pokemon","state","name","pokemonIndex","imageUrl","type","decriptio","stats","hp","attack","defense","speed","specialAttack","specialDefense","height","weight","eggGroup","abilities","genderRatioMale","genderRatioFemale","evs","hastchSteps","componentDidMount","props","match","params","pokemonUrl","pokemonSpeciesUrl","pokemonRes","get","data","sprites","front_default","map","stat","Math","round","types","ability","toLowerCase","split","s","charAt","toUpperCase","substring","join","filter","effort","effor","then","res","description","flavor_text_entries","some","flavor","language","flavor_text","femaleRate","catchRate","eggGroups","group","setState","render","backgroundColor","color","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\n\nconst TYPE_COLORS = {\n    bug: 'B1C12E',\n    dark: '4F3A2D',\n    dragon: '755EDF',\n    electric: 'FCBC17',\n    fairy: 'F4B1F4',\n    fighting: '823551D',\n    fire: 'E73B0C',\n    flying: 'A3B3F7',\n    ghost: '6060B2',\n    grass: '74C236',\n    ground: 'D3B357',\n    ice: 'A3E7FD',\n    normal: 'C8C4BC',\n    poison: '934594',\n    psychic: 'ED4882',\n    rock: 'B9A156',\n    steel: 'B5B5C3',\n    water: '3295F6'\n  };\n\n\n\nexport default class Pokemon extends Component {\n\n\n    state={\n        name:'',\n        pokemonIndex:'',\n        imageUrl:'',\n        type: [],\n        decriptio:'pt-br',\n        stats:{\n            hp:\"\",\n            attack:\"\",\n            defense:\"\",\n            speed:\"\",\n            specialAttack:\"\",\n            specialDefense:\"\"\n        },\n        height:\"\",\n        weight:\"\",\n        eggGroup:\"\",\n        abilities:\"\",\n        genderRatioMale:\"\",\n        genderRatioFemale:\"\",\n        evs:\"\",\n        hastchSteps:\"\"\n    \n    };\n\n    async componentDidMount(){\n        const { pokemonIndex } = this.props.match.params;\n \n        // Urls do pokemon\n        const pokemonUrl = `https://pokeapi.co/api/v2/pokemon/${pokemonIndex}/`;\n        const pokemonSpeciesUrl = `https://pokeapi.co/api/v2/pokemon-species/${pokemonIndex}/`;\n\n        // pegue as informações do pokemon\n        const pokemonRes = await axios.get(pokemonUrl);\n        const name = pokemonRes.data.name;\n        const imageUrl = pokemonRes.data.sprites.front_default;\n\n        let {hp,attack,defense,speed,specialAttack,specialDefense} = '';\n        pokemonRes.data.stats.map(stat=>{\n            switch(stat.stat.name){\n                case 'hp':\n                    hp=stat['base_stat'];\n                    break;\n                 case 'attack':\n                    attack=stat['base_stat'];\n                    break;\n                case 'defense':\n                    defense=stat['base_stat'];\n                     break;\n                case 'speed':\n                    speed=stat['base_stat'];\n                    break;\n                case 'special-attack':\n                    specialAttack=stat['base_stat'];\n                    break;\n                case 'special-defense':\n                    specialDefense=stat['base_stat'];\n                    break;\n                default:\n                    break;\n            }\n\n        });\n        //conversor de decimetros \n        const height = \n           Math.round((pokemonRes.data.height * 0.328084 + 0.0001) * 100) / 100;\n        \n           // conversor to lbs\n        const weight =\n           Math.round((pokemonRes.data.weight * 0.220462 + 0.0001) * 100) / 100;\n        \n        const type = pokemonRes.data.types.map(type => type.type.name);\n\n        const abilities = pokemonRes.data.abilities.map(ability =>{\n            return ability.ability.name\n            .toLowerCase()\n            .split('-')\n            .map(s => s.charAt(0).toUpperCase() + s.substring(1))\n            .join('');\n        })\n\n        const evs = pokemonRes.data.stats.filter(stat =>{\n            if (stat.effort > 0){\n                return true;\n            }\n                return false;\n        }).map(stat => {\n            return`${stat.effor} ${stat.stat.name}`\n            .toLowerCase()\n            .split('-')\n            .map(s => s.charAt(0).toUpperCase() + s.substring(1))\n            .join('');\n        })\n        .join(',');\n\n        //pegar descrições do pokemon\n        await axios.get(pokemonSpeciesUrl).then(res =>{\n            let description = '';\n            res.data.flavor_text_entries.some(flavor =>{\n                if(flavor.language.name === 'pt-br'){\n                    description = flavor.flavor_text;\n                    return;\n                }\n            });\n\n            const femaleRate = res.data['gender_rate'];\n            const genderRatioFemale = 12.5 * femaleRate;\n            const genderRatioMale = 12.5 * (8 - femaleRate);\n\n            const catchRate = Math.round((100 / 255) * res.data['capture_rate']);\n\n            const eggGroups = res.data['egg_groups']\n            .map(group => {\n                return group.name\n                .toLowerCase()\n                .split('-')\n                .map(s => s.charAt(0).toUpperCase() + s.substring(1))\n                .join(' ');\n                }).join(',');\n\n                const hastchSteps = 255 * (res.data[\"hatch_counter\"] + 1);\n                this.setState({\n                    description,\n                    genderRatioFemale,\n                    genderRatioMale,\n                    catchRate,\n                    eggGroups,\n                    hastchSteps\n                })\n            });\n\n                this.setState({\n                  imageUrl,\n                  pokemonIndex,\n                  name,\n                  type,\n                  state: {\n                      hp,\n                      attack,\n                      defense,\n                      speed,\n                      specialAttack,\n                      specialDefense\n                  },\n                    height,\n                    weight,\n                    abilities,\n                    evs\n                  \n                });\n\n    }\n    render() {\n        return  (\n        \n         <div className = \"col\">\n            <div className = \"card\">\n                <div className = \"card-header\">\n                    <div className = \"row\">\n                        <div className = \"clo-5\">\n        <h5>{this.state.pokemonIndex}</h5>\n                        </div>\n                        <div className = \"col-7\">\n                            <div className = \"float-right\">\n                                {this.state.type.map(type =>(\n                                    <span key = {type}\n                                className = \"badge badge-primary badge-pill mr-1 leftS\"\n                                style = {{\n                                    backgroundColor: `#${TYPE_COLORS[type]}`,\n                                    color: 'white',\n                                    \n                                }}\n                                >\n                                    {type\n                                    .toLowerCase()\n                                    .split('-')\n                                    .map(s => s.charAt(0).toUpperCase() + s.substring(1))\n                                    .join(' ')}\n                                    </span>\n                                ))}\n                            </div> \n                        </div>\n                    </div>\n                </div>  \n                            <div className=\"card-body\">\n                                <div className='row align-items-center'>\n                                    <div className='col-md-3'>\n                                        <img\n                                          src={this.state.imageUrl}\n                                          className=\"card-img-top rounded mx-auto mt-2\"/>\n                                    </div>\n                                   \n                                    <div className=\"col-md-9\" >\n                                     <h4 className=\"mx-auto\" >\n                                            \n                                            {this.state.name\n                                              .toLowerCase()\n                                              .split('-')\n                                              .map(s => s.charAt(0).toUpperCase() + s.substring(1))\n                                              .join(' ' )}\n                                        </h4>\n                                        <div className=\"row aling-intems-center\">\n                                            <div className=\"col-12 col-md-3\">HP</div>\n                                            <div className=\"col-12 col-md-9\">\n                                                <div className=\"progress\">\n                                                    <div className=\"progress-bar\" \n                                                    role=\"progressBar\" \n                                                    style={{\n                                                        width:`${this.state.stats.hp}%`\n                                                    }}\n                                                    aria-valuenow=\"25\"\n                                                    aria-valuemin=\"0\"\n                                                    aria-valuemax=\"100\"\n                                                    />\n\n                                                   \n                                                \n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                </div>\n                            </div>\n            </div>\n         </div>\n        );\n    };\n\n}"]},"metadata":{},"sourceType":"module"}